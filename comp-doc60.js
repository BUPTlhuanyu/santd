(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{580:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/san/dist/san.spa.min.js\nvar san_spa_min = __webpack_require__(0);\nvar san_spa_min_default = /*#__PURE__*/__webpack_require__.n(san_spa_min);\n\n// CONCATENATED MODULE: ./src/tree-select/README.md\n/* harmony default export */ var README = ({\n  template: `<section class="markdown"><h2 id="api">API</h2><h3 id="tree-props">Tree props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>allowClear</td><td>显示清除按钮</td><td>boolean</td><td>false</td></tr><tr><td>autoClearSearchValue</td><td>当多选模式下值被选择，自动清空搜索框</td><td>boolean</td><td>true</td></tr><tr><td>defaultValue</td><td>指定默认选中的条目</td><td>string/string[]</td><td>-</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>false</td></tr><tr><td>dropdownClassName</td><td>下拉菜单的 className 属性</td><td>string</td><td>-</td></tr><tr><td>dropdownMatchSelectWidth</td><td>下拉菜单和选择器同宽</td><td>boolean</td><td>true</td></tr><tr><td>dropdownStyle</td><td>下拉菜单的样式</td><td>object</td><td>-</td></tr><tr><td>getPopupContainer</td><td>菜单渲染父节点。默认渲染到 body 上，如果你遇到菜单滚动定位问题，试试修改为滚动的区域，并相对其定位。</td><td>Function(triggerNode)</td><td>() =&gt; document.body</td></tr><tr><td>loadData</td><td>异步加载数据</td><td>Function(node)</td><td>-</td></tr><tr><td>maxTagCount</td><td>最多显示多少个 tag</td><td>number</td><td>-</td></tr><tr><td>maxTagPlaceholder</td><td>隐藏 tag 时显示的内容</td><td>string</td><td></td></tr><tr><td>multiple</td><td>支持多选（当设置 treeCheckable 时自动变为true）</td><td>boolean</td><td>false</td></tr><tr><td>placeholder</td><td>选择框默认文字</td><td>string</td><td>-</td></tr><tr><td>searchPlaceholder</td><td>搜索框默认文字</td><td>string</td><td>-</td></tr><tr><td>showCheckedStrategy</td><td>定义选中项回填的方式。<code>TreeSelect.SHOW_ALL</code>: 显示所有选中节点(包括父节点). <code>TreeSelect.SHOW_PARENT</code>: 只显示父节点(当父节点下所有子节点都选中时). 默认只显示子节点.</td><td>enum{TreeSelect.SHOW_ALL, TreeSelect.SHOW_PARENT, TreeSelect.SHOW_CHILD }</td><td>TreeSelect.SHOW_CHILD</td></tr><tr><td>size</td><td>选择框大小，可选 <code>large</code> <code>small</code></td><td>string</td><td>&#39;default&#39;</td></tr><tr><td>suffixIcon</td><td>自定义的选择框后缀图标</td><td>slot</td><td>-</td></tr><tr><td>treeCheckable</td><td>显示 checkbox</td><td>boolean</td><td>false</td></tr><tr><td>treeData</td><td>treeNodes 数据，如果设置则不需要手动构造 TreeNode 节点（value 在整个树范围内唯一）</td><td>array&lt;{value, label, children, [disabled, disableCheckbox, selectable]}&gt;</td><td>[]</td></tr><tr><td>treeDefaultExpandAll</td><td>默认展开所有树节点</td><td>boolean</td><td>false</td></tr><tr><td>treeDefaultExpandedKeys</td><td>默认展开的树节点</td><td>string[]</td><td>-</td></tr><tr><td>treeExpandedKeys</td><td>设置展开的树节点</td><td>string[]</td><td>-</td></tr><tr><td>value</td><td>指定当前选中的条目</td><td>string/string[]</td><td>-</td></tr><tr><td>on-change</td><td>选中树节点时调用此函数</td><td>function(value, node, info)</td><td>-</td></tr><tr><td>on-search</td><td>文本框值变化时回调</td><td>function(value)</td><td>-</td></tr><tr><td>on-select</td><td>被选中时调用</td><td>function(value, node, info)</td><td>-</td></tr><tr><td>on-treeExpand</td><td>展示节点时调用</td><td>function(expandedKeys)</td><td>-</td></tr></tbody></table><h3 id="tree-方法">Tree 方法</h3><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>blur()</td><td>移除焦点</td></tr><tr><td>foucs()</td><td>获取焦点</td></tr></tbody></table><h3 id="treenode-props">TreeNode props</h3><blockquote><p>建议使用 treeData 来代替 TreeNode，免去手工构造麻烦</p></blockquote><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>selectable</td><td>是否可选</td><td>boolean</td><td>true</td></tr><tr><td>disableCheckbox</td><td>禁掉 checkbox</td><td>boolean</td><td>false</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>false</td></tr><tr><td>isLeaf</td><td>设置为叶子节点</td><td>boolean</td><td>false</td></tr><tr><td>key</td><td>此项必须设置（其值在整个树范围内唯一）</td><td>string</td><td>-</td></tr><tr><td>title</td><td>树节点显示的内容</td><td>string|slot</td><td>-</td></tr><tr><td>value</td><td>默认根据此属性值进行筛选（其值在整个树范围内唯一）</td><td>string</td><td>-</td></tr></tbody></table></section>`\n});\n    if(false){ var moduleDefault, id, hotApi; }\n    \n// EXTERNAL MODULE: ./src/tree-select/index.js + 5 modules\nvar tree_select = __webpack_require__(127);\n\n// EXTERNAL MODULE: ./src/icon/index.js + 5 modules\nvar icon = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./node_modules/hulk-san-loader!./node_modules/hulk-markdown-loader/utils/pickFence.js?url=/Users/mayihui/code/santd/src/tree-select/docs/basic.md!./node_modules/hulk-markdown-loader/utils/_fakemd?mdurl=/Users/mayihui/code/santd/src/tree-select/docs/basic.md&_t=1576497827988\n\n\n\n/* harmony default export */ var basic_md_t_1576497827988 = ({\n  components: {\n    \'s-tree-select\': tree_select["a" /* default */],\n    \'s-tree-select-node\': tree_select["a" /* default */].TreeNode\n  },\n\n  onChange(value) {\n    console.log(\'选择的单一值是: \', value);\n  },\n\n  template: `<div><s-tree-select style="width: 100%;" dropdownStyle="{{ {\'max-height\': \'200px\', overflow: \'auto\'} }}" treeDefaultExpandAll="{{true}}" allowClear="{{true}}" placeholder="Please select" on-change="onChange"><s-tree-select-node value="parent 1" title="parent 1" key="0-1"><s-tree-select-node value="parent 1-0" title="parent 1-0" key="0-1-1"><s-tree-select-node value="leaf1" title="my leaf" key="random"></s-tree-select-node><s-tree-select-node value="leaf2" title="your leaf" key="random1"></s-tree-select-node></s-tree-select-node><s-tree-select-node value="parent 1-1" title="parent 1-1" key="random2"><s-tree-select-node value="sss" key="random3"><b style="color: #08c;" slot="title">sss</b></s-tree-select-node></s-tree-select-node></s-tree-select-node></s-tree-select></div>`\n});\n// CONCATENATED MODULE: ./src/tree-select/docs/basic.md\n\n/* harmony default export */ var basic = ({\n  initData() {\n    return {\n      isExpand: false,\n      code: `\n<pre><code class="language-html">&lt;template>\n  &lt;div>\n    &lt;s-tree-select\n        style="width: 100%;"\n        dropdownStyle="{{ {\'max-height\': \'200px\', overflow: \'auto\'} }}"\n        treeDefaultExpandAll="{{true}}"\n        allowClear="{{true}}"\n        placeholder="Please select"\n        on-change="onChange"\n    >\n        &lt;s-tree-select-node value="parent 1" title="parent 1" key="0-1">\n            &lt;s-tree-select-node value="parent 1-0" title="parent 1-0" key="0-1-1">\n                &lt;s-tree-select-node value="leaf1" title="my leaf" key="random" />\n                &lt;s-tree-select-node value="leaf2" title="your leaf" key="random1" />\n            &lt;/s-tree-select-node>\n            &lt;s-tree-select-node value="parent 1-1" title="parent 1-1" key="random2">\n                &lt;s-tree-select-node value="sss" key="random3">\n                    &lt;b style="color: #08c;" slot="title">sss&lt;/b>\n                &lt;/s-tree-select-node>\n            &lt;/s-tree-select-node>\n        &lt;/s-tree-select-node>\n    &lt;/s-tree-select>\n  &lt;/div>\n&lt;/template>\n&lt;script>\n\nimport san from \'san\'\nimport TreeSelect from \'santd/tree-select\';\nimport Icon from \'santd/icon\';\n\nexport default {\n    components: {\n        \'s-tree-select\': TreeSelect,\n        \'s-tree-select-node\': TreeSelect.TreeNode\n    },\n    onChange(value) {\n        console.log(\'选择的单一值是: \', value);\n    }\n}\n&lt;/script></code></pre>`,\n      text: `\n<h4 id="tree-select基本">tree-select基本</h4>\n<p>树选择组件,最简单的用法</p>`\n    };\n  },\n\n  toggleExpand() {\n    this.data.set(\'isExpand\', !this.data.get(\'isExpand\'));\n  },\n\n  components: {\n    \'code-preview\': basic_md_t_1576497827988\n  },\n  template: `<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1576497827988"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>`\n});\n    if(false){ var basic_moduleDefault, basic_id, basic_hotApi; }\n    \n// CONCATENATED MODULE: ./src/tree-select/docs/desc.md\n/* harmony default export */ var desc = ({\n  template: `<section class="markdown"><h1 id="treeselect-树选择">TreeSelect 树选择</h1><p>树型选择控件。</p><h2 id="何时使用">何时使用</h2><p>类似 Select 的选择控件，可选择的数据结构是一个树形结构时，可以使用 TreeSelect，例如公司层级、学科系统、分类目录等等。</p><h2 id="代码演示">代码演示</h2></section>`\n});\n    if(false){ var desc_moduleDefault, desc_id, desc_hotApi; }\n    \n// CONCATENATED MODULE: ./node_modules/hulk-san-loader!./node_modules/hulk-markdown-loader/utils/pickFence.js?url=/Users/mayihui/code/santd/src/tree-select/docs/multiple.md!./node_modules/hulk-markdown-loader/utils/_fakemd?mdurl=/Users/mayihui/code/santd/src/tree-select/docs/multiple.md&_t=1576497827970\n\n/* harmony default export */ var multiple_md_t_1576497827970 = ({\n  components: {\n    \'s-tree-select\': tree_select["a" /* default */],\n    \'s-tree-select-node\': tree_select["a" /* default */].TreeNode\n  },\n\n  onChange(value) {\n    console.log(\'选择的单一值是: \', value);\n  },\n\n  onSearch(search) {\n    console.log(\'search is.....\', search);\n  },\n\n  template: `<div><s-tree-select style="width: 100%;" dropdownStyle="{{ {\'max-height\': \'200px\', overflow: \'auto\'} }}" treeDefaultExpandAll="{{true}}" allowClear="{{true}}" multiple="{{true}}" placeholder="Please select" on-change="onChange" on-search="onSearch"><s-tree-select-node value="parent 1" title="parent 1" key="0-1"><s-tree-select-node value="parent 1-0" title="parent 1-0" key="0-1-1"><s-tree-select-node value="leaf1" title="my leaf" key="random"></s-tree-select-node><s-tree-select-node value="leaf2" title="your leaf" key="random1"></s-tree-select-node></s-tree-select-node><s-tree-select-node value="parent 1-1" title="parent 1-1" key="random2"><s-tree-select-node value="sss" key="random3"><b style="color: #08c;" slot="title">sss</b></s-tree-select-node></s-tree-select-node></s-tree-select-node></s-tree-select></div>`\n});\n// CONCATENATED MODULE: ./src/tree-select/docs/multiple.md\n\n/* harmony default export */ var multiple = ({\n  initData() {\n    return {\n      isExpand: false,\n      code: `\n<pre><code class="language-html">&lt;template>\n  &lt;div>\n    &lt;s-tree-select\n        style="width: 100%;"\n        dropdownStyle="{{ {\'max-height\': \'200px\', overflow: \'auto\'} }}"\n        treeDefaultExpandAll="{{true}}"\n        allowClear="{{true}}"\n        multiple="{{true}}"\n        placeholder="Please select"\n        on-change="onChange"\n        on-search="onSearch"\n    >\n        &lt;s-tree-select-node value="parent 1" title="parent 1" key="0-1">\n            &lt;s-tree-select-node value="parent 1-0" title="parent 1-0" key="0-1-1">\n                &lt;s-tree-select-node value="leaf1" title="my leaf" key="random" />\n                &lt;s-tree-select-node value="leaf2" title="your leaf" key="random1" />\n            &lt;/s-tree-select-node>\n            &lt;s-tree-select-node value="parent 1-1" title="parent 1-1" key="random2">\n                &lt;s-tree-select-node value="sss" key="random3">\n                    &lt;b style="color: #08c;" slot="title">sss&lt;/b>\n                &lt;/s-tree-select-node>\n            &lt;/s-tree-select-node>\n        &lt;/s-tree-select-node>\n    &lt;/s-tree-select>\n  &lt;/div>\n&lt;/template>\n&lt;script>\n\nimport TreeSelect from \'santd/tree-select\';\n\nexport default {\n    components: {\n        \'s-tree-select\': TreeSelect,\n        \'s-tree-select-node\': TreeSelect.TreeNode\n    },\n    onChange(value) {\n        console.log(\'选择的单一值是: \', value);\n    },\n    onSearch(search) {\n        console.log(\'search is.....\', search);\n    }\n}\n&lt;/script></code></pre>`,\n      text: `\n<h4 id="多选">多选</h4>\n<p>多选的树选择。</p>`\n    };\n  },\n\n  toggleExpand() {\n    this.data.set(\'isExpand\', !this.data.get(\'isExpand\'));\n  },\n\n  components: {\n    \'code-preview\': multiple_md_t_1576497827970\n  },\n  template: `<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1576497827970"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>`\n});\n    if(false){ var multiple_moduleDefault, multiple_id, multiple_hotApi; }\n    \n// EXTERNAL MODULE: ./src/tree/index.js + 3 modules\nvar tree = __webpack_require__(44);\n\n// CONCATENATED MODULE: ./node_modules/hulk-san-loader!./node_modules/hulk-markdown-loader/utils/pickFence.js?url=/Users/mayihui/code/santd/src/tree-select/docs/checkable.md!./node_modules/hulk-markdown-loader/utils/_fakemd?mdurl=/Users/mayihui/code/santd/src/tree-select/docs/checkable.md&_t=1576497827960\n\n\nconst treeData = [{\n  title: \'Node1\',\n  value: \'0-0\',\n  key: \'0-0\',\n  children: [{\n    title: \'Child Node1\',\n    value: \'0-0-0\',\n    key: \'0-0-0\'\n  }]\n}, {\n  title: \'Node2\',\n  value: \'0-1\',\n  key: \'0-1\',\n  children: [{\n    title: \'Child Node3\',\n    value: \'0-1-0\',\n    key: \'0-1-0\'\n  }, {\n    title: \'Child Node4\',\n    value: \'0-1-1\',\n    key: \'0-1-1\'\n  }, {\n    title: \'Child Node5\',\n    value: \'0-1-2\',\n    key: \'0-1-2\'\n  }]\n}];\n/* harmony default export */ var checkable_md_t_1576497827960 = ({\n  components: {\n    \'s-tree-select\': tree_select["a" /* default */]\n  },\n\n  initData() {\n    return {\n      value: [\'0-1\'],\n      treeData: treeData,\n      SHOW_PARENT: tree_select["a" /* default */].SHOW_PARENT\n    };\n  },\n\n  onChange(values) {\n    console.log(\'value is: \', values);\n  },\n\n  template: `<div><s-tree-select style="width: 100%;" treeCheckable="{{true}}" dropdownStyle="{{ {\'max-height\': \'200px\', overflow: \'auto\'} }}" treeData="{{treeData}}" treeDefaultExpandAll="{{true}}" showCheckedStrategy="{{SHOW_PARENT}}" placeholder="Please select" allowClear="{{true}}" value="{{value}}" on-change="onChange"></s-tree-select></div>`\n});\n// CONCATENATED MODULE: ./src/tree-select/docs/checkable.md\n\n/* harmony default export */ var checkable = ({\n  initData() {\n    return {\n      isExpand: false,\n      code: `\n<pre><code class="language-html">&lt;template>\n    &lt;div>\n      &lt;s-tree-select\n          style="width: 100%;"\n          treeCheckable="{{true}}"\n          dropdownStyle="{{ {\'max-height\': \'200px\', overflow: \'auto\'} }}"\n          treeData="{{treeData}}"\n          treeDefaultExpandAll="{{true}}"\n          showCheckedStrategy="{{SHOW_PARENT}}"\n          placeholder="Please select"\n          allowClear="{{true}}"\n          value="{{value}}"\n          on-change="onChange"\n      >\n      &lt;/s-tree-select>\n    &lt;/div>\n&lt;/template>\n&lt;script>\nimport Tree from \'santd/tree\';\nimport TreeSelect from \'santd/tree-select\';\n\nconst treeData = [{\n  title: \'Node1\',\n  value: \'0-0\',\n  key: \'0-0\',\n  children: [{\n    title: \'Child Node1\',\n    value: \'0-0-0\',\n    key: \'0-0-0\',\n  }],\n}, {\n  title: \'Node2\',\n  value: \'0-1\',\n  key: \'0-1\',\n  children: [{\n    title: \'Child Node3\',\n    value: \'0-1-0\',\n    key: \'0-1-0\',\n  }, {\n    title: \'Child Node4\',\n    value: \'0-1-1\',\n    key: \'0-1-1\',\n  }, {\n    title: \'Child Node5\',\n    value: \'0-1-2\',\n    key: \'0-1-2\',\n  }],\n}];\n\nexport default {\n    components: {\n        \'s-tree-select\': TreeSelect\n    },\n    initData() {\n        return {\n            value: [\'0-1\'],\n            treeData: treeData,\n            SHOW_PARENT: TreeSelect.SHOW_PARENT\n        }\n    },\n    onChange(values) {\n        console.log(\'value is: \', values);\n    }\n}\n&lt;/script></code></pre>`,\n      text: `\n<h4 id="可勾选">可勾选</h4>\n<p>使用勾选框实现多选功能。</p>`\n    };\n  },\n\n  toggleExpand() {\n    this.data.set(\'isExpand\', !this.data.get(\'isExpand\'));\n  },\n\n  components: {\n    \'code-preview\': checkable_md_t_1576497827960\n  },\n  template: `<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1576497827960"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>`\n});\n    if(false){ var checkable_moduleDefault, checkable_id, checkable_hotApi; }\n    \n// CONCATENATED MODULE: ./node_modules/hulk-san-loader!./node_modules/hulk-markdown-loader/utils/pickFence.js?url=/Users/mayihui/code/santd/src/tree-select/docs/treeData.md!./node_modules/hulk-markdown-loader/utils/_fakemd?mdurl=/Users/mayihui/code/santd/src/tree-select/docs/treeData.md&_t=1576497827952\n\nconst treeData_md_t_1576497827952_treeData = [{\n  title: \'Node1\',\n  value: \'0-0\',\n  key: \'0-0\',\n  children: [{\n    title: \'Child Node1\',\n    value: \'0-0-1\',\n    key: \'0-0-1\'\n  }, {\n    title: \'Child Node2\',\n    value: \'0-0-2\',\n    key: \'0-0-2\'\n  }]\n}, {\n  title: \'Node2\',\n  value: \'0-1\',\n  key: \'0-1\'\n}];\n/* harmony default export */ var treeData_md_t_1576497827952 = ({\n  components: {\n    \'s-tree-select\': tree_select["a" /* default */]\n  },\n\n  initData() {\n    return {\n      treeData: treeData_md_t_1576497827952_treeData\n    };\n  },\n\n  onChange(value) {\n    console.log(\'选择的单一值是: \', value);\n  },\n\n  template: `<div><s-tree-select style="width: 100%;" dropdownStyle="{{ {\'max-height\': \'200px\', overflow: \'auto\'} }}" treeData="{{treeData}}" treeDefaultExpandAll="{{true}}" placeholder="Please select" on-change="onChange"></s-tree-select></div>`\n});\n// CONCATENATED MODULE: ./src/tree-select/docs/treeData.md\n\n/* harmony default export */ var docs_treeData = ({\n  initData() {\n    return {\n      isExpand: false,\n      code: `\n<pre><code class="language-html">&lt;template>\n  &lt;div>\n    &lt;s-tree-select\n        style="width: 100%;"\n        dropdownStyle="{{ {\'max-height\': \'200px\', overflow: \'auto\'} }}"\n        treeData="{{treeData}}"\n        treeDefaultExpandAll="{{true}}"\n        placeholder="Please select"\n        on-change="onChange"\n    >\n    &lt;/s-tree-select>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nimport TreeSelect from \'santd/tree-select\';\n\nconst treeData = [{\n  title: \'Node1\',\n  value: \'0-0\',\n  key: \'0-0\',\n  children: [{\n    title: \'Child Node1\',\n    value: \'0-0-1\',\n    key: \'0-0-1\',\n  }, {\n    title: \'Child Node2\',\n    value: \'0-0-2\',\n    key: \'0-0-2\',\n  }],\n}, {\n  title: \'Node2\',\n  value: \'0-1\',\n  key: \'0-1\',\n}];\n\n\nexport default {\n    components: {\n        \'s-tree-select\': TreeSelect\n    },\n    initData() {\n        return {\n            treeData: treeData\n        }\n    },\n    onChange(value) {\n        console.log(\'选择的单一值是: \', value);\n    }\n}\n&lt;/script></code></pre>`,\n      text: `\n<h4 id="从数据直接生成">从数据直接生成</h4>\n<p>使用 <code>treeData</code> 把 JSON 数据直接生成树结构。</p>`\n    };\n  },\n\n  toggleExpand() {\n    this.data.set(\'isExpand\', !this.data.get(\'isExpand\'));\n  },\n\n  components: {\n    \'code-preview\': treeData_md_t_1576497827952\n  },\n  template: `<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1576497827952"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>`\n});\n    if(false){ var treeData_moduleDefault, treeData_id, treeData_hotApi; }\n    \n// CONCATENATED MODULE: ./node_modules/hulk-san-loader!./node_modules/hulk-markdown-loader/utils/pickFence.js?url=/Users/mayihui/code/santd/src/tree-select/docs/loadData.md!./node_modules/hulk-markdown-loader/utils/_fakemd?mdurl=/Users/mayihui/code/santd/src/tree-select/docs/loadData.md&_t=1576497827943\n\nconst loadData_md_t_1576497827943_treeData = [{\n  value: \'1\',\n  title: \'Expand to load\',\n  key: \'0\'\n}, {\n  value: \'2\',\n  title: \'Expand to load\',\n  key: \'1\'\n}, {\n  value: \'3\',\n  title: \'Tree Node\',\n  isLeaf: true,\n  key: \'2\'\n}];\n\nconst genTreeNode = (parentId, isLeaf = false) => {\n  const random = Math.random().toString(36).substring(2, 6);\n  return {\n    id: random,\n    pId: parentId,\n    value: random,\n    title: isLeaf ? \'Tree Node\' : \'Expand to load\',\n    isLeaf\n  };\n};\n\n/* harmony default export */ var loadData_md_t_1576497827943 = ({\n  components: {\n    \'s-tree-select\': tree_select["a" /* default */]\n  },\n\n  initData() {\n    return {\n      treeData: loadData_md_t_1576497827943_treeData,\n\n      loadData(treenode) {\n        new Promise(resolve => {\n          if (treenode.data.get(\'treeData\')) {\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            treenode.data.set(\'treeData\', [{\n              title: \'Child Node\',\n              key: Math.floor(Math.random() * 10) + \'node\'\n            }]);\n            resolve();\n          }, 1000);\n        });\n      }\n\n    };\n  },\n\n  onChange(value) {\n    console.log(\'选择的单一值是: \', value);\n  },\n\n  template: `<div><s-tree-select style="width: 100%;" dropdownStyle="{{ {\'max-height\': \'200px\', overflow: \'auto\'} }}" treeData="{{treeData}}" treeDefaultExpandAll="{{true}}" placeholder="Please select" loadData="{{loadData}}" on-change="onChange"></s-tree-select></div>`\n});\n// CONCATENATED MODULE: ./src/tree-select/docs/loadData.md\n\n/* harmony default export */ var loadData = ({\n  initData() {\n    return {\n      isExpand: false,\n      code: `\n<pre><code class="language-html">&lt;template>\n  &lt;div>\n    &lt;s-tree-select\n        style="width: 100%;"\n        dropdownStyle="{{ {\'max-height\': \'200px\', overflow: \'auto\'} }}"\n        treeData="{{treeData}}"\n        treeDefaultExpandAll="{{true}}"\n        placeholder="Please select"\n        loadData="{{loadData}}"\n        on-change="onChange"\n    >\n    &lt;/s-tree-select>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nimport TreeSelect from \'santd/tree-select\';\n\nconst treeData = [\n    {value: \'1\', title: \'Expand to load\', key: \'0\'},\n    {value: \'2\', title: \'Expand to load\', key: \'1\'},\n    {value: \'3\', title: \'Tree Node\', isLeaf: true, key: \'2\'}\n];\n\nconst genTreeNode = (parentId, isLeaf = false) => {\n    const random = Math.random()\n        .toString(36)\n        .substring(2, 6);\n    return {\n        id: random,\n        pId: parentId,\n        value: random,\n        title: isLeaf ? \'Tree Node\' : \'Expand to load\',\n        isLeaf\n    };\n};\n\n\nexport default {\n    components: {\n        \'s-tree-select\': TreeSelect\n    },\n    initData() {\n        return {\n            treeData: treeData,\n            loadData(treenode) {\n\n        new Promise(resolve => {\n            if (treenode.data.get(\'treeData\')) {\n                resolve();\n                return;\n            }\n            setTimeout(() => {\n                treenode.data.set(\'treeData\', [{title: \'Child Node\', key: Math.floor(Math.random() * 10) + \'node\'}]);\n                resolve();\n            }, 1000)\n        });\n            }\n        }\n    },\n    onChange(value) {\n        console.log(\'选择的单一值是: \', value);\n    }\n}\n&lt;/script></code></pre>`,\n      text: `\n<h4 id="异步加载">异步加载</h4>\n<p>异步加载树节点。</p>`\n    };\n  },\n\n  toggleExpand() {\n    this.data.set(\'isExpand\', !this.data.get(\'isExpand\'));\n  },\n\n  components: {\n    \'code-preview\': loadData_md_t_1576497827943\n  },\n  template: `<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1576497827943"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>`\n});\n    if(false){ var loadData_moduleDefault, loadData_id, loadData_hotApi; }\n    \n// CONCATENATED MODULE: ./src/tree-select/docs/index.js\n/**\n * @file Santd tree select docs file\n **/\n\n\n\n\n\n\n\n\n/* harmony default export */ var docs = __webpack_exports__["default"] = (san_spa_min_default.a.defineComponent({\n  components: {\n    readme: README,\n    desc: desc,\n    basic: basic,\n    multiple: multiple,\n    checkable: checkable,\n    treedata: docs_treeData,\n    loaddata: loadData\n  },\n  template: "\\n        <div>\\n            <desc/>\\n            <basic/>\\n            <treeData/>\\n            <loaddata/>\\n            <multiple/>\\n            <checkable/>\\n            <readme/>\\n        </div>\\n    "\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///580\n')}}]);