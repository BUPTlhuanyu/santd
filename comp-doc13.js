(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{569:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/san/dist/san.spa.min.js\nvar san_spa_min = __webpack_require__(0);\nvar san_spa_min_default = /*#__PURE__*/__webpack_require__.n(san_spa_min);\n\n// CONCATENATED MODULE: ./src/checkbox/docs/desc.md\n/* harmony default export */ var desc = ({\n  template: `<section class="markdown"><h1 id="checkbox-多选框">Checkbox 多选框</h1><p>多选框。</p><h2 id="何时使用">何时使用</h2><ul><li>在一组可选项中进行多项选择时；</li><li>单独使用可以表示两种状态之间的切换，和 <code>switch</code> 类似。区别在于切换 <code>switch</code> 会直接触发状态改变，而 <code>checkbox</code> 一般用于状态标记，需要和提交操作配合。</li></ul><h2 id="代码演示">代码演示</h2></section>`\n});\n    if(false){ var moduleDefault, id, hotApi; }\n    \n// EXTERNAL MODULE: ./src/checkbox/index.js + 2 modules\nvar src_checkbox = __webpack_require__(20);\n\n// CONCATENATED MODULE: ./node_modules/hulk-san-loader!./node_modules/hulk-markdown-loader/utils/pickFence.js?url=/Users/mayihui/code/santd/src/checkbox/docs/basic.md!./node_modules/hulk-markdown-loader/utils/_fakemd?mdurl=/Users/mayihui/code/santd/src/checkbox/docs/basic.md&_t=1576635847707\n\n/* harmony default export */ var basic_md_t_1576635847707 = ({\n  components: {\n    \'s-checkbox\': src_checkbox["a" /* default */]\n  },\n\n  handleChange(e) {\n    console.log(`checked = ${e.target.checked}`);\n  },\n\n  template: `<div><s-checkbox on-change="handleChange">checkbox</s-checkbox></div>`\n});\n// CONCATENATED MODULE: ./src/checkbox/docs/basic.md\n\n/* harmony default export */ var basic = ({\n  initData() {\n    return {\n      isExpand: false,\n      code: `\n<pre><code class="language-html">&lt;template>\n    &lt;div>\n        &lt;s-checkbox on-change="handleChange">checkbox&lt;/s-checkbox>\n    &lt;/div>\n&lt;/template>\n\n&lt;script>\nimport Checkbox from \'santd/checkbox\';\n\nexport default {\n    components:{\n       \'s-checkbox\': Checkbox\n    },\n    handleChange(e) {\n        console.log(&#96;checked = &#36;&#123;e.target.checked}&#96;);\n    }\n}\n&lt;/script></code></pre>`,\n      text: `\n<h4 id="基本用法">基本用法</h4>\n<p>简单的checkbox</p>`\n    };\n  },\n\n  toggleExpand() {\n    this.data.set(\'isExpand\', !this.data.get(\'isExpand\'));\n  },\n\n  components: {\n    \'code-preview\': basic_md_t_1576635847707\n  },\n  template: `<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1576635847707"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>`\n});\n    if(false){ var basic_moduleDefault, basic_id, basic_hotApi; }\n    \n// CONCATENATED MODULE: ./node_modules/hulk-san-loader!./node_modules/hulk-markdown-loader/utils/pickFence.js?url=/Users/mayihui/code/santd/src/checkbox/docs/disabled.md!./node_modules/hulk-markdown-loader/utils/_fakemd?mdurl=/Users/mayihui/code/santd/src/checkbox/docs/disabled.md&_t=1576635847701\n\n/* harmony default export */ var disabled_md_t_1576635847701 = ({\n  components: {\n    \'s-checkbox\': src_checkbox["a" /* default */]\n  },\n  template: `<div class="checkbox-demo"><s-checkbox defaultChecked="{{false}}" disabled="{{true}}"></s-checkbox><br><s-checkbox defaultChecked="{{true}}" disabled="{{true}}"></s-checkbox></div>`\n});\n// CONCATENATED MODULE: ./src/checkbox/docs/disabled.md\n\n/* harmony default export */ var disabled = ({\n  initData() {\n    return {\n      isExpand: false,\n      code: `\n<pre><code class="language-html">&lt;template>\n    &lt;div class="checkbox-demo">\n        &lt;s-checkbox defaultChecked="{{false}}" disabled="{{true}}" />\n        &lt;br />\n        &lt;s-checkbox defaultChecked="{{true}}" disabled="{{true}}" />\n    &lt;/div>\n&lt;/template>\n\n&lt;script>\nimport Checkbox from \'santd/checkbox\';\nexport default {\n    components:{\n       \'s-checkbox\': Checkbox\n    }\n\n}\n&lt;/script></code></pre>`,\n      text: `\n<h4 id="不可用">不可用</h4>\n<p>checkbox不可用。</p>`\n    };\n  },\n\n  toggleExpand() {\n    this.data.set(\'isExpand\', !this.data.get(\'isExpand\'));\n  },\n\n  components: {\n    \'code-preview\': disabled_md_t_1576635847701\n  },\n  template: `<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1576635847701"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>`\n});\n    if(false){ var disabled_moduleDefault, disabled_id, disabled_hotApi; }\n    \n// EXTERNAL MODULE: ./src/button/index.js + 2 modules\nvar src_button = __webpack_require__(10);\n\n// CONCATENATED MODULE: ./node_modules/hulk-san-loader!./node_modules/hulk-markdown-loader/utils/pickFence.js?url=/Users/mayihui/code/santd/src/checkbox/docs/controller.md!./node_modules/hulk-markdown-loader/utils/_fakemd?mdurl=/Users/mayihui/code/santd/src/checkbox/docs/controller.md&_t=1576635847676\n\n\n/* harmony default export */ var controller_md_t_1576635847676 = ({\n  components: {\n    \'s-checkbox\': src_checkbox["a" /* default */],\n    \'s-button\': src_button["a" /* default */]\n  },\n  computed: {\n    label() {\n      const checked = this.data.get(\'checked\');\n      const disabled = this.data.get(\'disabled\');\n      return (checked ? \'Checked\' : \'Unchecked\') + \'-\' + (disabled ? \'Disabled\' : \'Enable\');\n    }\n\n  },\n\n  initData() {\n    return {\n      checked: true,\n      disabled: false\n    };\n  },\n\n  handleChecked() {\n    this.data.set(\'checked\', !this.data.get(\'checked\'));\n  },\n\n  handleDisable() {\n    this.data.set(\'disabled\', !this.data.get(\'disabled\'));\n  },\n\n  handleChange(e) {\n    console.log(\'checked = \', e.target.checked);\n    this.data.set(\'checked\', e.target.checked);\n  },\n\n  template: `<div><p style="margin-bottom: 20px;"><s-checkbox on-change="handleChange" checked="{{checked}}" disabled="{{disabled}}">{{label}}</s-checkbox></p><p><s-button type="primary" size="small" on-click="handleChecked">{{checked ? \'Check\' : \'Uncheck\'}}</s-button><s-button type="primary" size="small" on-click="handleDisable">{{disabled ? \'Disable\' : \'Enable\'}}</s-button></p></div>`\n});\n// CONCATENATED MODULE: ./src/checkbox/docs/controller.md\n\n/* harmony default export */ var controller = ({\n  initData() {\n    return {\n      isExpand: false,\n      code: `\n<pre><code class="language-html">&lt;template>\n    &lt;div>\n        &lt;p style="margin-bottom: 20px;">\n            &lt;s-checkbox on-change="handleChange" checked="{{checked}}" disabled="{{disabled}}">{{label}}&lt;/s-checkbox>\n        &lt;/p>\n        &lt;p>\n            &lt;s-button type="primary" size="small" on-click="handleChecked">{{checked ? \'Check\' : \'Uncheck\'}}&lt;/s-button>\n            &lt;s-button type="primary" size="small" on-click="handleDisable">{{disabled ? \'Disable\' : \'Enable\'}}&lt;/s-button>\n        &lt;/p>\n    &lt;/div>\n&lt;/template>\n\n&lt;script>\nimport Checkbox from \'santd/checkbox\';\nimport Button from \'santd/button\';\n\nexport default {\n    components:{\n       \'s-checkbox\': Checkbox,\n       \'s-button\': Button\n    },\n    computed: {\n        label() {\n            const checked = this.data.get(\'checked\');\n            const disabled = this.data.get(\'disabled\');\n\n            return (checked ? \'Checked\' : \'Unchecked\') + \'-\' + (disabled ? \'Disabled\' : \'Enable\');\n        }\n    },\n    initData() {\n        return {\n            checked: true,\n            disabled: false\n        }\n    },\n    handleChecked() {\n        this.data.set(\'checked\', !this.data.get(\'checked\'));\n    },\n    handleDisable() {\n        this.data.set(\'disabled\', !this.data.get(\'disabled\'));\n    },\n    handleChange(e) {\n        console.log(\'checked = \', e.target.checked);\n        this.data.set(\'checked\', e.target.checked);\n    }\n}\n&lt;/script></code></pre>`,\n      text: `\n<h4 id="受控的checkbox">受控的Checkbox</h4>\n<p>联动Checkbox。</p>`\n    };\n  },\n\n  toggleExpand() {\n    this.data.set(\'isExpand\', !this.data.get(\'isExpand\'));\n  },\n\n  components: {\n    \'code-preview\': controller_md_t_1576635847676\n  },\n  template: `<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1576635847676"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>`\n});\n    if(false){ var controller_moduleDefault, controller_id, controller_hotApi; }\n    \n// CONCATENATED MODULE: ./node_modules/hulk-san-loader!./node_modules/hulk-markdown-loader/utils/pickFence.js?url=/Users/mayihui/code/santd/src/checkbox/docs/group.md!./node_modules/hulk-markdown-loader/utils/_fakemd?mdurl=/Users/mayihui/code/santd/src/checkbox/docs/group.md&_t=1576635847661\n\nconst plainOptions = [\'Apple\', \'Pear\', \'Orange\'];\nconst options = [{\n  label: \'Apple\',\n  value: \'Apple\'\n}, {\n  label: \'Pear\',\n  value: \'Pear\'\n}, {\n  label: \'Orange\',\n  value: \'Orange\'\n}];\nconst optionsWithDisabled = [{\n  label: \'Apple\',\n  value: \'Apple\'\n}, {\n  label: \'Pear\',\n  value: \'Pear\'\n}, {\n  label: \'Orange\',\n  value: \'Orange\',\n  disabled: false\n}];\n/* harmony default export */ var group_md_t_1576635847661 = ({\n  components: {\n    \'s-checkboxgroup\': src_checkbox["a" /* default */].Group\n  },\n  computed: {\n    groupValueAllJson() {\n      let groupValue = this.data.get(\'groupValueAll\');\n      return JSON.stringify(groupValue);\n    }\n\n  },\n\n  initData() {\n    return {\n      plainOptions,\n      options,\n      optionsWithDisabled\n    };\n  },\n\n  handleChange(checkedValues) {\n    console.log(\'checked = \', checkedValues);\n  },\n\n  template: `<div class="checkbox-demo"><s-checkboxgroup options="{{plainOptions}}" defaultValue="{{[\'Apple\']}}" on-change="handleChange"></s-checkboxgroup><br><br><s-checkboxgroup options="{{options}}" defaultValue="{{[\'Pear\']}}" on-change="handleChange"></s-checkboxgroup><br><br><s-checkboxgroup options="{{optionsWithDisabled}}" disabled="{{true}}" defaultValue="{{[\'Apple\']}}" on-change="handleChange"></s-checkboxgroup></div>`\n});\n// CONCATENATED MODULE: ./src/checkbox/docs/group.md\n\n/* harmony default export */ var group = ({\n  initData() {\n    return {\n      isExpand: false,\n      code: `\n<pre><code class="language-html">&lt;template>\n    &lt;div class="checkbox-demo">\n        &lt;s-checkboxgroup options="{{plainOptions}}" defaultValue="{{[\'Apple\']}}" on-change="handleChange">&lt;/s-checkboxgroup>\n        &lt;br />&lt;br />\n        &lt;s-checkboxgroup options="{{options}}" defaultValue="{{[\'Pear\']}}" on-change="handleChange">&lt;/s-checkboxgroup>\n        &lt;br />&lt;br />\n        &lt;s-checkboxgroup options="{{optionsWithDisabled}}" disabled="{{true}}" defaultValue="{{[\'Apple\']}}" on-change="handleChange">&lt;/s-checkboxgroup>\n    &lt;/div>\n&lt;/template>\n\n&lt;script>\nimport Checkbox from \'santd/checkbox\';\n\nconst plainOptions = [\'Apple\', \'Pear\', \'Orange\'];\n\nconst options = [\n    {label: \'Apple\', value: \'Apple\'},\n    {label: \'Pear\', value: \'Pear\'},\n    {label: \'Orange\', value: \'Orange\'}\n];\nconst optionsWithDisabled = [\n    {label: \'Apple\', value: \'Apple\'},\n    {label: \'Pear\', value: \'Pear\'},\n    {label: \'Orange\', value: \'Orange\', disabled: false}\n];\n\nexport default {\n    components:{\n       \'s-checkboxgroup\': Checkbox.Group\n    },\n    computed: {\n        groupValueAllJson() {\n            let groupValue = this.data.get(\'groupValueAll\');\n            return JSON.stringify(groupValue);\n        }\n    },\n    initData() {\n        return {\n            plainOptions,\n            options,\n            optionsWithDisabled\n        };\n    },\n    handleChange(checkedValues) {\n        console.log(\'checked = \', checkedValues);\n    }\n}\n&lt;/script></code></pre>`,\n      text: `\n<h4 id="checkbox组">Checkbox组</h4>\n<p>方便的从数组生成Checkbox组。</p>`\n    };\n  },\n\n  toggleExpand() {\n    this.data.set(\'isExpand\', !this.data.get(\'isExpand\'));\n  },\n\n  components: {\n    \'code-preview\': group_md_t_1576635847661\n  },\n  template: `<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1576635847661"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>`\n});\n    if(false){ var group_moduleDefault, group_id, group_hotApi; }\n    \n// CONCATENATED MODULE: ./node_modules/hulk-san-loader!./node_modules/hulk-markdown-loader/utils/pickFence.js?url=/Users/mayihui/code/santd/src/checkbox/docs/checkall.md!./node_modules/hulk-markdown-loader/utils/_fakemd?mdurl=/Users/mayihui/code/santd/src/checkbox/docs/checkall.md&_t=1576635847649\n\nconst checkall_md_t_1576635847649_plainOptions = [\'Apple\', \'Pear\', \'Orange\'];\nconst defaultCheckedList = [\'Apple\', \'Orange\'];\n/* harmony default export */ var checkall_md_t_1576635847649 = ({\n  components: {\n    \'s-checkbox\': src_checkbox["a" /* default */],\n    \'s-checkboxgroup\': src_checkbox["a" /* default */].Group\n  },\n  computed: {\n    groupValueAllJson() {\n      let groupValue = this.data.get(\'groupValueAll\');\n      return JSON.stringify(groupValue);\n    }\n\n  },\n\n  initData() {\n    return {\n      plainOptions: checkall_md_t_1576635847649_plainOptions,\n      checkedList: defaultCheckedList,\n      indeterminate: true,\n      checkAll: false\n    };\n  },\n\n  handleChange(checkedList) {\n    const plainOptions = this.data.get(\'plainOptions\');\n    this.data.set(\'checkedList\', checkedList);\n    this.data.set(\'indeterminate\', !!checkedList.length && checkedList.length < plainOptions.length);\n    this.data.set(\'checkAll\', checkedList.length === plainOptions.length);\n  },\n\n  handleAllChange(e) {\n    const plainOptions = this.data.get(\'plainOptions\');\n    this.data.set(\'checkedList\', e.target.checked ? plainOptions : []);\n    this.data.set(\'indeterminate\', false);\n    this.data.set(\'checkAll\', e.target.checked);\n  },\n\n  template: `<div><div style="border-bottom: 1px solid #E9E9E9"><s-checkbox indeterminate="{{indeterminate}}" on-change="handleAllChange" checked="{{checkAll}}">Check All</s-checkbox></div><br><s-checkboxgroup options="{{plainOptions}}" value="{{checkedList}}" on-change="handleChange"></s-checkboxgroup></div>`\n});\n// CONCATENATED MODULE: ./src/checkbox/docs/checkall.md\n\n/* harmony default export */ var checkall = ({\n  initData() {\n    return {\n      isExpand: false,\n      code: `\n<pre><code class="language-html">&lt;template>\n    &lt;div>\n        &lt;div style="border-bottom: 1px solid #E9E9E9">\n            &lt;s-checkbox indeterminate="{{indeterminate}}" on-change="handleAllChange" checked="{{checkAll}}">Check All&lt;/s-checkbox>\n        &lt;/div>\n        &lt;br />\n        &lt;s-checkboxgroup options="{{plainOptions}}" value="{{checkedList}}" on-change="handleChange">&lt;/s-checkboxgroup>\n    &lt;/div>\n&lt;/template>\n\n&lt;script>\nimport Checkbox from \'santd/checkbox\';\n\nconst plainOptions = [\'Apple\', \'Pear\', \'Orange\'];\nconst defaultCheckedList = [\'Apple\', \'Orange\'];\n\nexport default {\n    components:{\n        \'s-checkbox\': Checkbox,\n       \'s-checkboxgroup\': Checkbox.Group\n    },\n    computed: {\n        groupValueAllJson() {\n            let groupValue = this.data.get(\'groupValueAll\');\n            return JSON.stringify(groupValue);\n        }\n    },\n    initData() {\n        return {\n            plainOptions,\n            checkedList: defaultCheckedList,\n            indeterminate: true,\n            checkAll: false\n        };\n    },\n    handleChange(checkedList) {\n        const plainOptions = this.data.get(\'plainOptions\');\n        this.data.set(\'checkedList\', checkedList);\n        this.data.set(\'indeterminate\', !!checkedList.length && (checkedList.length &lt; plainOptions.length));\n        this.data.set(\'checkAll\', checkedList.length === plainOptions.length);\n    },\n    handleAllChange(e) {\n        const plainOptions = this.data.get(\'plainOptions\');\n        this.data.set(\'checkedList\', e.target.checked ? plainOptions : []);\n        this.data.set(\'indeterminate\', false);\n        this.data.set(\'checkAll\', e.target.checked);\n    }\n}\n&lt;/script></code></pre>`,\n      text: `\n<h4 id="全选">全选</h4>\n<p>在实现全选效果时，你可能会用到 indeterminate 属性。</p>`\n    };\n  },\n\n  toggleExpand() {\n    this.data.set(\'isExpand\', !this.data.get(\'isExpand\'));\n  },\n\n  components: {\n    \'code-preview\': checkall_md_t_1576635847649\n  },\n  template: `<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1576635847649"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>`\n});\n    if(false){ var checkall_moduleDefault, checkall_id, checkall_hotApi; }\n    \n// EXTERNAL MODULE: ./src/grid/index.js + 2 modules\nvar grid = __webpack_require__(19);\n\n// CONCATENATED MODULE: ./node_modules/hulk-san-loader!./node_modules/hulk-markdown-loader/utils/pickFence.js?url=/Users/mayihui/code/santd/src/checkbox/docs/grid.md!./node_modules/hulk-markdown-loader/utils/_fakemd?mdurl=/Users/mayihui/code/santd/src/checkbox/docs/grid.md&_t=1576635847640\n\n\n/* harmony default export */ var grid_md_t_1576635847640 = ({\n  components: {\n    \'s-row\': grid["c" /* default */].Row,\n    \'s-col\': grid["c" /* default */].Col,\n    \'s-checkbox\': src_checkbox["a" /* default */],\n    \'s-checkboxgroup\': src_checkbox["a" /* default */].Group\n  },\n\n  handleChange(checkedValues) {\n    console.log(\'checked = \', checkedValues);\n  },\n\n  template: `<div><s-checkboxgroup on-change="handleChange" style="{{{width: \'100%\'}}}"><s-row><s-col span="8"><s-checkbox value="A">A</s-checkbox></s-col><s-col span="8"><s-checkbox value="B">B</s-checkbox></s-col><s-col span="8"><s-checkbox value="C">C</s-checkbox></s-col><s-col span="8"><s-checkbox value="D">D</s-checkbox></s-col><s-col span="8"><s-checkbox value="E">E</s-checkbox></s-col></s-row></s-checkboxgroup></div>`\n});\n// CONCATENATED MODULE: ./src/checkbox/docs/grid.md\n\n/* harmony default export */ var docs_grid = ({\n  initData() {\n    return {\n      isExpand: false,\n      code: `\n<pre><code class="language-html">&lt;template>\n    &lt;div>\n        &lt;s-checkboxgroup on-change="handleChange" style="{{{width: \'100%\'}}}">\n            &lt;s-row>\n                &lt;s-col span="8">&lt;s-checkbox value="A">A&lt;/s-checkbox>&lt;/s-col>\n                &lt;s-col span="8">&lt;s-checkbox value="B">B&lt;/s-checkbox>&lt;/s-col>\n                &lt;s-col span="8">&lt;s-checkbox value="C">C&lt;/s-checkbox>&lt;/s-col>\n                &lt;s-col span="8">&lt;s-checkbox value="D">D&lt;/s-checkbox>&lt;/s-col>\n                &lt;s-col span="8">&lt;s-checkbox value="E">E&lt;/s-checkbox>&lt;/s-col>\n            &lt;/s-row>\n        &lt;/s-checkboxgroup>\n    &lt;/div>\n&lt;/template>\n\n&lt;script>\nimport Checkbox from \'santd/checkbox\';\nimport Grid from \'santd/grid\';\n\nexport default {\n    components:{\n        \'s-row\': Grid.Row,\n        \'s-col\': Grid.Col,\n        \'s-checkbox\': Checkbox,\n        \'s-checkboxgroup\': Checkbox.Group\n    },\n    handleChange(checkedValues) {\n        console.log(\'checked = \', checkedValues);\n    }\n}\n&lt;/script></code></pre>`,\n      text: `\n<h4 id="布局">布局</h4>\n<p>Checkbox.Group 内嵌 Checkbox 并与 Grid 组件一起使用，可以实现灵活的布局。</p>`\n    };\n  },\n\n  toggleExpand() {\n    this.data.set(\'isExpand\', !this.data.get(\'isExpand\'));\n  },\n\n  components: {\n    \'code-preview\': grid_md_t_1576635847640\n  },\n  template: `<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1576635847640"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>`\n});\n    if(false){ var grid_moduleDefault, grid_id, grid_hotApi; }\n    \n// CONCATENATED MODULE: ./src/checkbox/README.md\n/* harmony default export */ var README = ({\n  template: `<section class="markdown"><h2 id="api">API</h2><h3 id="checkbox">Checkbox</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>autoFocus</td><td>自动获取焦点</td><td>boolean</td><td>false</td></tr><tr><td>checked</td><td>指定当前是否选中</td><td>boolean</td><td>false</td></tr><tr><td>defaultChecked</td><td>初始是否选中</td><td>boolean</td><td>false</td></tr><tr><td>disabled</td><td>失效状态</td><td>boolean</td><td>false</td></tr><tr><td>indeterminate</td><td>设置 indeterminate 状态，只负责样式控制</td><td>boolean</td><td>false</td></tr><tr><td>on-change</td><td>变化时回调函数</td><td>Function(e:Event)</td><td>-</td></tr></tbody></table><h3 id="checkbox-group">Checkbox Group</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>defaultValue</td><td>默认选中的项</td><td>string[]</td><td>[]</td></tr><tr><td>disabled</td><td>整组失效</td><td>boolean</td><td>false</td></tr><tr><td>name</td><td><code>CheckboxGroup</code> 下所有 <code>input[type=&quot;checkbox&quot;]</code> 的 <code>name</code> 属性</td><td>string</td><td>-</td></tr><tr><td>options</td><td>指定可选项</td><td>string[]</td><td>[]</td></tr><tr><td>value</td><td>指定选中的选项</td><td>string[]</td><td>[]</td></tr><tr><td>on-change</td><td>变化时回调函数</td><td>Function(checkedValue)</td><td>-</td></tr></tbody></table><h2 id="方法">方法</h2><h3 id="checkbox-1">Checkbox</h3><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>blur()</td><td>移除焦点</td></tr><tr><td>focus()</td><td>获取焦点</td></tr></tbody></table></section>`\n});\n    if(false){ var README_moduleDefault, README_id, README_hotApi; }\n    \n// CONCATENATED MODULE: ./src/checkbox/docs/index.js\n/**\n * @file Santd checkbox docs file\n **/\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var docs = __webpack_exports__["default"] = (san_spa_min_default.a.defineComponent({\n  components: {\n    desc: desc,\n    basic: basic,\n    disabled: disabled,\n    controller: controller,\n    group: group,\n    checkall: checkall,\n    grid: docs_grid,\n    readme: README\n  },\n  template: "\\n        <div>\\n            <desc/>\\n            <basic/>\\n            <disabled/>\\n            <controller/>\\n            <group/>\\n            <checkall/>\\n            <grid/>\\n            <readme/>\\n        </div>\\n    "\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///569\n')}}]);